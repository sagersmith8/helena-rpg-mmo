/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 13.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Abilities
 */
export interface Abilities {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {number}
     * @memberof Abilities
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Abilities
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Abilities
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof Abilities
     */
    damage?: number;
    /**
     * 
     * @type {number}
     * @memberof Abilities
     */
    range?: number;
    /**
     * 
     * @type {number}
     * @memberof Abilities
     */
    manaCost?: number;
    /**
     * 
     * @type {number}
     * @memberof Abilities
     */
    cooldown?: number;
    /**
     * Note:
     * This is a Foreign Key to `skills.id`.<fk table='skills' column='id'/>
     * @type {number}
     * @memberof Abilities
     */
    requiredSkill?: number;
    /**
     * 
     * @type {number}
     * @memberof Abilities
     */
    requiredLevel?: number;
    /**
     * Note:
     * This is a Foreign Key to `items.id`.<fk table='items' column='id'/>
     * @type {number}
     * @memberof Abilities
     */
    requiredItem?: number;
    /**
     * 
     * @type {number}
     * @memberof Abilities
     */
    requiredQuantity?: number;
    /**
     * 
     * @type {string}
     * @memberof Abilities
     */
    image?: string;
}

/**
 * Check if a given object implements the Abilities interface.
 */
export function instanceOfAbilities(value: object): value is Abilities {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function AbilitiesFromJSON(json: any): Abilities {
    return AbilitiesFromJSONTyped(json, false);
}

export function AbilitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Abilities {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'damage': json['damage'] == null ? undefined : json['damage'],
        'range': json['range'] == null ? undefined : json['range'],
        'manaCost': json['mana_cost'] == null ? undefined : json['mana_cost'],
        'cooldown': json['cooldown'] == null ? undefined : json['cooldown'],
        'requiredSkill': json['required_skill'] == null ? undefined : json['required_skill'],
        'requiredLevel': json['required_level'] == null ? undefined : json['required_level'],
        'requiredItem': json['required_item'] == null ? undefined : json['required_item'],
        'requiredQuantity': json['required_quantity'] == null ? undefined : json['required_quantity'],
        'image': json['image'] == null ? undefined : json['image'],
    };
}

export function AbilitiesToJSON(json: any): Abilities {
    return AbilitiesToJSONTyped(json, false);
}

export function AbilitiesToJSONTyped(value?: Abilities | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'damage': value['damage'],
        'range': value['range'],
        'mana_cost': value['manaCost'],
        'cooldown': value['cooldown'],
        'required_skill': value['requiredSkill'],
        'required_level': value['requiredLevel'],
        'required_item': value['requiredItem'],
        'required_quantity': value['requiredQuantity'],
        'image': value['image'],
    };
}

