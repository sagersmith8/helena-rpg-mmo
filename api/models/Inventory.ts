/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 13.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Inventory
 */
export interface Inventory {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `characters.id`.<fk table='characters' column='id'/>
     * @type {number}
     * @memberof Inventory
     */
    characterId: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `items.id`.<fk table='items' column='id'/>
     * @type {number}
     * @memberof Inventory
     */
    itemId: number;
    /**
     * 
     * @type {boolean}
     * @memberof Inventory
     */
    equipped?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Inventory
     */
    quantity?: number;
}

/**
 * Check if a given object implements the Inventory interface.
 */
export function instanceOfInventory(value: object): value is Inventory {
    if (!('characterId' in value) || value['characterId'] === undefined) return false;
    if (!('itemId' in value) || value['itemId'] === undefined) return false;
    return true;
}

export function InventoryFromJSON(json: any): Inventory {
    return InventoryFromJSONTyped(json, false);
}

export function InventoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Inventory {
    if (json == null) {
        return json;
    }
    return {
        
        'characterId': json['character_id'],
        'itemId': json['item_id'],
        'equipped': json['equipped'] == null ? undefined : json['equipped'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
    };
}

export function InventoryToJSON(json: any): Inventory {
    return InventoryToJSONTyped(json, false);
}

export function InventoryToJSONTyped(value?: Inventory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'character_id': value['characterId'],
        'item_id': value['itemId'],
        'equipped': value['equipped'],
        'quantity': value['quantity'],
    };
}

