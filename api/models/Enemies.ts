/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 13.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Enemies
 */
export interface Enemies {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {number}
     * @memberof Enemies
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Enemies
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Enemies
     */
    health?: number;
    /**
     * 
     * @type {number}
     * @memberof Enemies
     */
    mana?: number;
    /**
     * 
     * @type {number}
     * @memberof Enemies
     */
    experienceReward?: number;
    /**
     * 
     * @type {number}
     * @memberof Enemies
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof Enemies
     */
    longitude?: number;
    /**
     * 
     * @type {any}
     * @memberof Enemies
     */
    path?: any | null;
    /**
     * 
     * @type {number}
     * @memberof Enemies
     */
    step?: number;
    /**
     * 
     * @type {string}
     * @memberof Enemies
     */
    image?: string;
}

/**
 * Check if a given object implements the Enemies interface.
 */
export function instanceOfEnemies(value: object): value is Enemies {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function EnemiesFromJSON(json: any): Enemies {
    return EnemiesFromJSONTyped(json, false);
}

export function EnemiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Enemies {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'health': json['health'] == null ? undefined : json['health'],
        'mana': json['mana'] == null ? undefined : json['mana'],
        'experienceReward': json['experience_reward'] == null ? undefined : json['experience_reward'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'path': json['path'] == null ? undefined : json['path'],
        'step': json['step'] == null ? undefined : json['step'],
        'image': json['image'] == null ? undefined : json['image'],
    };
}

export function EnemiesToJSON(json: any): Enemies {
    return EnemiesToJSONTyped(json, false);
}

export function EnemiesToJSONTyped(value?: Enemies | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'health': value['health'],
        'mana': value['mana'],
        'experience_reward': value['experienceReward'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'path': value['path'],
        'step': value['step'],
        'image': value['image'],
    };
}

