/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 13.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Characters
 */
export interface Characters {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {number}
     * @memberof Characters
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Characters
     */
    name: string;
    /**
     * Note:
     * This is a Foreign Key to `ancestries.id`.<fk table='ancestries' column='id'/>
     * @type {number}
     * @memberof Characters
     */
    ancestry?: number;
    /**
     * Note:
     * This is a Foreign Key to `backgrounds.id`.<fk table='backgrounds' column='id'/>
     * @type {number}
     * @memberof Characters
     */
    background?: number;
    /**
     * Note:
     * This is a Foreign Key to `classes.id`.<fk table='classes' column='id'/>
     * @type {number}
     * @memberof Characters
     */
    classId?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    level?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    gold?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    speed?: number;
    /**
     * 
     * @type {string}
     * @memberof Characters
     */
    size?: string;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    experience?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    health?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    mana?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    longitude?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    strength?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    dexterity?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    intelligence?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    charisma?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    wisdom?: number;
    /**
     * 
     * @type {number}
     * @memberof Characters
     */
    constitution?: number;
    /**
     * 
     * @type {string}
     * @memberof Characters
     */
    createdAt?: string;
}

/**
 * Check if a given object implements the Characters interface.
 */
export function instanceOfCharacters(value: object): value is Characters {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CharactersFromJSON(json: any): Characters {
    return CharactersFromJSONTyped(json, false);
}

export function CharactersFromJSONTyped(json: any, ignoreDiscriminator: boolean): Characters {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'ancestry': json['ancestry'] == null ? undefined : json['ancestry'],
        'background': json['background'] == null ? undefined : json['background'],
        'classId': json['class_id'] == null ? undefined : json['class_id'],
        'level': json['level'] == null ? undefined : json['level'],
        'gold': json['gold'] == null ? undefined : json['gold'],
        'speed': json['speed'] == null ? undefined : json['speed'],
        'size': json['size'] == null ? undefined : json['size'],
        'experience': json['experience'] == null ? undefined : json['experience'],
        'health': json['health'] == null ? undefined : json['health'],
        'mana': json['mana'] == null ? undefined : json['mana'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'strength': json['strength'] == null ? undefined : json['strength'],
        'dexterity': json['dexterity'] == null ? undefined : json['dexterity'],
        'intelligence': json['intelligence'] == null ? undefined : json['intelligence'],
        'charisma': json['charisma'] == null ? undefined : json['charisma'],
        'wisdom': json['wisdom'] == null ? undefined : json['wisdom'],
        'constitution': json['constitution'] == null ? undefined : json['constitution'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
    };
}

export function CharactersToJSON(json: any): Characters {
    return CharactersToJSONTyped(json, false);
}

export function CharactersToJSONTyped(value?: Characters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'ancestry': value['ancestry'],
        'background': value['background'],
        'class_id': value['classId'],
        'level': value['level'],
        'gold': value['gold'],
        'speed': value['speed'],
        'size': value['size'],
        'experience': value['experience'],
        'health': value['health'],
        'mana': value['mana'],
        'longitude': value['longitude'],
        'latitude': value['latitude'],
        'strength': value['strength'],
        'dexterity': value['dexterity'],
        'intelligence': value['intelligence'],
        'charisma': value['charisma'],
        'wisdom': value['wisdom'],
        'constitution': value['constitution'],
        'created_at': value['createdAt'],
    };
}

