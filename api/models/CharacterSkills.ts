/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 13.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CharacterSkills
 */
export interface CharacterSkills {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `characters.id`.<fk table='characters' column='id'/>
     * @type {number}
     * @memberof CharacterSkills
     */
    characterId: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `skills.id`.<fk table='skills' column='id'/>
     * @type {number}
     * @memberof CharacterSkills
     */
    skillId: number;
    /**
     * 
     * @type {number}
     * @memberof CharacterSkills
     */
    level?: number;
    /**
     * 
     * @type {number}
     * @memberof CharacterSkills
     */
    experience?: number;
}

/**
 * Check if a given object implements the CharacterSkills interface.
 */
export function instanceOfCharacterSkills(value: object): value is CharacterSkills {
    if (!('characterId' in value) || value['characterId'] === undefined) return false;
    if (!('skillId' in value) || value['skillId'] === undefined) return false;
    return true;
}

export function CharacterSkillsFromJSON(json: any): CharacterSkills {
    return CharacterSkillsFromJSONTyped(json, false);
}

export function CharacterSkillsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CharacterSkills {
    if (json == null) {
        return json;
    }
    return {
        
        'characterId': json['character_id'],
        'skillId': json['skill_id'],
        'level': json['level'] == null ? undefined : json['level'],
        'experience': json['experience'] == null ? undefined : json['experience'],
    };
}

export function CharacterSkillsToJSON(json: any): CharacterSkills {
    return CharacterSkillsToJSONTyped(json, false);
}

export function CharacterSkillsToJSONTyped(value?: CharacterSkills | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'character_id': value['characterId'],
        'skill_id': value['skillId'],
        'level': value['level'],
        'experience': value['experience'],
    };
}

